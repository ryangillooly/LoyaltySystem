{
	"info": {
		"_postman_id": "b7a8f1e2-5f6c-4d8a-a6b1-ef8d12c35d93",
		"name": "LoyaltySystem - Business API",
		"description": "API collection for the business management endpoints in the Loyalty System",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Login (Get Token)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"pm.environment.set(\"authToken\", jsonData.token);",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Token is present\", function () {",
									"    pm.expect(jsonData.token).to.exist;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"admin@example.com\",\n    \"password\": \"Admin123!\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"login"
							]
						},
						"description": "Login to get the authentication token"
					},
					"response": []
				}
			],
			"description": "Authentication endpoints to get access token"
		},
		{
			"name": "Business Management",
			"item": [
				{
					"name": "Get All Businesses",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has items array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.items).to.exist;",
									"    pm.expect(jsonData.items).to.be.an('array');",
									"});",
									"",
									"pm.test(\"Response has correct pagination fields\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.totalCount).to.exist;",
									"    pm.expect(jsonData.pageNumber).to.exist;",
									"    pm.expect(jsonData.pageSize).to.exist;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/business?page=1&pageSize=20",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"business"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "pageSize",
									"value": "20"
								}
							]
						},
						"description": "Get a paginated list of all businesses"
					},
					"response": []
				},
				{
					"name": "Get Business by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Business has correct properties\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).to.exist;",
									"    pm.expect(jsonData.name).to.exist;",
									"    pm.expect(jsonData.description).to.exist;",
									"    pm.expect(jsonData.taxId).to.exist;",
									"    pm.expect(jsonData.contact).to.exist;",
									"    pm.expect(jsonData.headquartersAddress).to.exist;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/business/{{businessId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"business",
								"{{businessId}}"
							]
						},
						"description": "Get a business by its ID"
					},
					"response": []
				},
				{
					"name": "Get Business Detail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Business has brands array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.brands).to.exist;",
									"    pm.expect(jsonData.brands).to.be.an('array');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/business/{{businessId}}/detail",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"business",
								"{{businessId}}",
								"detail"
							]
						},
						"description": "Get detailed information about a business including its brands"
					},
					"response": []
				},
				{
					"name": "Search Businesses",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has items array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.items).to.exist;",
									"    pm.expect(jsonData.items).to.be.an('array');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/business/search?nameQuery=Coffee&page=1&pageSize=20",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"business",
								"search"
							],
							"query": [
								{
									"key": "nameQuery",
									"value": "Coffee"
								},
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "pageSize",
									"value": "20"
								}
							]
						},
						"description": "Search for businesses by name"
					},
					"response": []
				},
				{
					"name": "Create Business",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Response has business ID\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).to.exist;",
									"    pm.environment.set(\"businessId\", jsonData.id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Coffee Chain Inc.\",\n    \"description\": \"Premium coffee shop chain\",\n    \"taxId\": \"TAX123456789\",\n    \"contact\": {\n        \"email\": \"info@coffeechain.com\",\n        \"phone\": \"+1-555-123-4567\",\n        \"website\": \"https://coffeechain.com\"\n    },\n    \"headquartersAddress\": {\n        \"line1\": \"123 Business Street\",\n        \"line2\": \"Suite 500\",\n        \"city\": \"Seattle\",\n        \"state\": \"WA\",\n        \"postalCode\": \"98101\",\n        \"country\": \"USA\"\n    },\n    \"logo\": \"https://example.com/coffeechain-logo.png\",\n    \"website\": \"https://coffeechain.com\",\n    \"foundedDate\": \"2005-03-15T00:00:00Z\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/business",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"business"
							]
						},
						"description": "Create a new business"
					},
					"response": []
				},
				{
					"name": "Update Business",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Business has updated fields\", function () {",
									"    var jsonData = pm.response.json();",
									"    var requestData = JSON.parse(pm.request.body.raw);",
									"    pm.expect(jsonData.name).to.eql(requestData.name);",
									"    pm.expect(jsonData.description).to.eql(requestData.description);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Coffee Chain Inc. - Updated\",\n    \"description\": \"Premium coffee shop chain with organic options\",\n    \"taxId\": \"TAX123456789\",\n    \"contact\": {\n        \"email\": \"info@coffeechain.com\",\n        \"phone\": \"+1-555-123-4567\",\n        \"website\": \"https://coffeechain.com\"\n    },\n    \"headquartersAddress\": {\n        \"line1\": \"123 Business Street\",\n        \"line2\": \"Suite 500\",\n        \"city\": \"Seattle\",\n        \"state\": \"WA\",\n        \"postalCode\": \"98101\",\n        \"country\": \"USA\"\n    },\n    \"logo\": \"https://example.com/coffeechain-logo-new.png\",\n    \"website\": \"https://coffeechain.com\",\n    \"foundedDate\": \"2005-03-15T00:00:00Z\",\n    \"isActive\": true\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/business/{{businessId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"business",
								"{{businessId}}"
							]
						},
						"description": "Update an existing business"
					},
					"response": []
				},
				{
					"name": "Delete Business",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/business/{{businessId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"business",
								"{{businessId}}"
							]
						},
						"description": "Delete a business by ID (only possible if it has no brands)"
					},
					"response": []
				},
				{
					"name": "Get Business Overview",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Overview contains metrics\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.brandCount).to.exist;",
									"    pm.expect(jsonData.storeCount).to.exist;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/business/{{businessId}}/overview",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"business",
								"{{businessId}}",
								"overview"
							]
						},
						"description": "Get an overview of the business with basic metrics"
					},
					"response": []
				},
				{
					"name": "Get Business Performance",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Performance data is present\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.totalTransactions).to.exist;",
									"    pm.expect(jsonData.totalCustomers).to.exist;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/business/{{businessId}}/performance?startDate=2023-01-01&endDate=2023-12-31",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"business",
								"{{businessId}}",
								"performance"
							],
							"query": [
								{
									"key": "startDate",
									"value": "2023-01-01"
								},
								{
									"key": "endDate",
									"value": "2023-12-31"
								}
							]
						},
						"description": "Get business performance metrics for a specific date range"
					},
					"response": []
				}
			],
			"description": "Endpoints for managing businesses"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://localhost:5001",
			"type": "string"
		},
		{
			"key": "businessId",
			"value": "",
			"type": "string"
		}
	]
} 